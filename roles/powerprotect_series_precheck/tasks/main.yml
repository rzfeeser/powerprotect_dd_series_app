---
# tasks file for powerprotect_series_precheck
# design a kind of precheck (assumes gathered facts is run)
- name: Assert that our physical capacity is above our desired threshold
  assert:
          that: powerprotect_series_app_info.physical_capacity.available > 10000 # this would be set to a value you thought within a tollerance
          fail_msg: "Physical Capacity Check - FAILED - Uh oh! We are running out room!"
          success_msg: "Physical Capacity Check - PASSED"


- name: debug the var
  debug:
          var: powerprotect_series_app_info.version.lstrip("Data Domain OS ").replace("-", "").replace(".", "")[0:4]
          verbosity: 1

- name: transfrom the version into a shorter var
  set_fact:
          ddsa_version: '{{ powerprotect_series_app_info.version.lstrip("Data Domain OS ").replace("-", "").replace(".", "")[0:4] }}'

- name: Assert that our version appears correct (checks that the string literal appears in the string)
  assert:
          that: '"7.2.0" in powerprotect_series_app_info.version'
          fail_msg: "Version Check - FAILED - A server is running a version below 7.2.0! Upgrade firmware recommended."
          success_msg: "Version Check - PASSED"

- name: Assert that the version appears correct (convert string to a int then check against our int 7000)
  assert:
          that: ddsa_version|int >= 7000
          success_msg: "Version Check above version 7.0.0.0 - PASSED"
          fail_msg: "Version Check above version 7.0.0.0 - FAILED"
